@using Microsoft.EntityFrameworkCore
@using SferumNet.Components.Pages.Components
@using SferumNet.DbModels.Vk
@using SferumNet.Services.Common

@inject NavigationManager Navigation;

<MudNavMenu>
    <MudNavLink Href="/home" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ElectricalServices">Служба запущена: @_scSerivce.DateTimeStarted</MudNavLink>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
    <MudNavLink OnClick="() => OpenAddProfile()" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Новый профиль</MudNavLink>
    @if (Profiles != null)
    {
        @foreach (var currentProfile in Profiles)
        {
            <MudNavLink OnClick="() => OpenProfile(currentProfile.Id)" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.ManageAccounts">@currentProfile.Name</MudNavLink>
        }
    }
    else
    {
        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7"/>
    }
</MudNavMenu>

@inject SferumNetContext Ef;
@inject IDialogService DialogService
@inject IScenarioConfigurator _scSerivce;

@code {

    private ICollection<VkProfile>? Profiles { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Profiles = await Ef.VkProfiles.ToListAsync();
    }

    private void OpenAddProfile()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<ModalAddProfile>("Настройка профиля", options);
    }

    private void OpenProfile(long idProfile)
    {
        Navigation.NavigateTo($"/profile?id={idProfile}", true);
    }

}