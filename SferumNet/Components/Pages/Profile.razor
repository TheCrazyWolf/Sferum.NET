@page "/profile"
@using Microsoft.EntityFrameworkCore
@using SferumNet.Components.Pages.Components
@using SferumNet.DbModels.Common
@using SferumNet.DbModels.Scenarios
@using SferumNet.DbModels.Vk

@inject IDialogService DialogService
@inject SferumNetContext Ef;

<PageTitle>Сценарии пользователя: @_currentProfile.Name</PageTitle>


<MudText Typo="Typo.h4" GutterBottom="true">Сценарии пользователя: @_currentProfile.Name</MudText>

<MudPaper Elevation="5">
    <MudToolBar>
        <MudIconButton Icon="@Icons.Material.Outlined.Add"/>
        <MudIconButton OnClick="() => OpenEditProfile()" Icon="@Icons.Material.Outlined.Edit"/>
        <MudIconButton Icon="@Icons.Material.Outlined.Remove" Color="Color.Inherit"/>
    </MudToolBar>
</MudPaper>

@if (_scenarios != null)
{
    <MudExpansionPanels Elevation="5" Class="mt-4" MultiExpansion="true">
        @foreach (var scenario in _scenarios)
        {
            <MudExpansionPanel  Text="@scenario.Title">
                <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                    <MudTabPanel Text="Действия">
                        <MudText>Работает с @scenario.TimeStart до @scenario.TimeEnd</MudText>
                        <MudButton Variant="Variant.Outlined" Color="Color.Primary">Редактировать</MudButton>
                        <MudButton Variant="Variant.Outlined" Color="Color.Primary">Удалить</MudButton>
                    </MudTabPanel>
                    <MudTabPanel Text="Статистика">
                        <MudText>Статистика</MudText>
                    </MudTabPanel>
                    <MudTabPanel Text="Логи">

                    </MudTabPanel>
                </MudTabs>
            </MudExpansionPanel>
        }
    </MudExpansionPanels>
}
else
{
    <MudProgressLinear Color="Color.Secondary" Indeterminate="true" Class="my-7"/>
}

@code {

    [Parameter] [SupplyParameterFromQuery] public int Id { get; set; }
    private VkProfile _currentProfile = new VkProfile();
    private ICollection<Scenario>? _scenarios;

    protected override async Task OnInitializedAsync()
    {
        await LoadDbProfile();
        await LoadScenarios();
    }

    private async Task LoadDbProfile()
    {
        _currentProfile = await Ef.VkProfiles.FirstOrDefaultAsync(x => x.Id == Id) ?? new VkProfile();
    }

    private async Task LoadScenarios()
    {
        _scenarios = await Ef.Scenarios.Where(x => x.IdProfile == Id).ToListAsync();
    }

    private async void OpenEditProfile()
    {
        var parameters = new DialogParameters<ModalAddProfile> { { "Profile", new VkProfile { Id = Id } } };
        await DialogService.ShowAsync<ModalAddProfile>("Настройка профиля", parameters);
    }

}